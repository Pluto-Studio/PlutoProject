syntax = "proto3";
package ink.pmc.framework.bridge.proto;

import "google/protobuf/empty.proto";

service BridgeRpc {
  rpc MonitorNotification(google.protobuf.Empty) returns (stream Notification);
  rpc RegisterServer(ServerInfo) returns (ServerRegistrationAck);
  rpc Heartbeat(ServerInfo) returns (google.protobuf.Empty);
  rpc OperatePlayer(PlayerOperation) returns (PlayerOperationResult);
  rpc AckPlayerOperation(PlayerOperationAck) returns (google.protobuf.Empty);
}

message TitleInfo {
  int32 fade_in = 1;
  int32 stay = 2;
  int32 fade_out = 3;
  string main_title = 4;
  string sub_title = 5;
}

message SoundInfo {
  string key = 1;
  float volume = 2;
  float pitch = 3;
}

message ServerInfo {
  string id = 1;
  string group = 2;
  repeated PlayerInfo players = 3;
  repeated WorldInfo worlds = 4;
}

message WorldInfo {
  string server = 1;
  string name = 2;
  optional string alias = 3;
  LocationInfo spawn_point = 4;
}

message LocationInfo {
  string server = 1;
  string world = 2;
  double x = 3;
  double y = 4;
  double z = 5;
  float yaw = 6;
  float pitch = 7;
}

message PlayerInfo {
  string server = 1;
  string unique_id = 2;
  string name = 3;
  LocationInfo location = 4;
}

message Notification {
  oneof content {
    ServerInfo server_registration = 1;
    ServerInfo server_info_update = 2;
    string server_offline = 3;
    PlayerOperation player_operation = 4;
    string player_switch_server = 5;
  }
}

message ServerRegistrationAck {
  oneof state {
    bool ok = 1;
    bool id_existed = 2;
  }
}

message PlayerOperation {
  string server = 1;
  string player = 2;
  oneof type {
    bool remote_proxy = 3;
    bool remote_backend = 4;
  }
  oneof content {
    PlayerInfo info_lookup = 5;
    string send_message = 6;
    TitleInfo show_title = 7;
    SoundInfo play_sound = 8;
    LocationInfo teleport = 9;
    string perform_command = 10;
  }
}

message PlayerOperationAck {
  string server = 1;
  string player = 2;
  oneof content {
    bool ok = 3;
    bool unsupported = 4;
  }
  optional PlayerInfo info_lookup = 5;
}

message PlayerOperationResult {
  string server = 1;
  oneof content {
    bool ok = 2;
    bool player_offline = 3;
    bool server_offline = 4;
    bool world_not_found = 5;
    bool unsupported = 6;
  }
  optional PlayerInfo info_lookup = 7;
}